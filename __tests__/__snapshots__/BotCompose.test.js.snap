// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BotCompose renders with no data 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "marginTop": 172,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 10,
      }
    }
  >
    <RCTScrollView
      activeAnimationOptions={null}
      activeAnimationType="timing"
      activeSlideAlignment="center"
      activeSlideOffset={20}
      apparitionDelay={0}
      automaticallyAdjustContentInsets={false}
      autoplay={false}
      autoplayDelay={5000}
      autoplayInterval={3000}
      callbackOffsetMargin={5}
      containerCustomStyle={Object {}}
      contentContainerCustomStyle={Object {}}
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "paddingLeft": 348.5,
            "paddingRight": 348.5,
          },
        ]
      }
      data={
        Array [
          undefined,
          "d",
          "a",
          "b",
          "g",
          "e",
          "c",
        ]
      }
      decelerationRate="fast"
      directionalLockEnabled={true}
      disableVirtualization={false}
      enableMomentum={false}
      enableSnap={true}
      firstItem={0}
      getItem={[Function]}
      getItemCount={[Function]}
      hasParallaxImages={false}
      horizontal={true}
      inactiveSlideOpacity={1}
      inactiveSlideScale={0.9}
      inactiveSlideShift={0}
      initialNumToRender={20}
      invertStickyHeaders={false}
      inverted={false}
      itemWidth={53}
      keyExtractor={[Function]}
      layout="default"
      lockScrollTimeoutDuration={1000}
      lockScrollWhileSnapping={false}
      loop={false}
      loopClonesPerSide={3}
      maxToRenderPerBatch={41}
      numColumns={1}
      onBeforeSnapToItem={[Function]}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onResponderRelease={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      onTouchStart={[Function]}
      overScrollMode="never"
      pinchGestureEnabled={false}
      removeClippedSubviews={true}
      renderItem={[Function]}
      scrollEventThrottle={1}
      scrollsToTop={false}
      shouldOptimizeUpdates={true}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      slideStyle={Object {}}
      sliderWidth={750}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 0,
          "width": 750,
        }
      }
      swipeThreshold={20}
      updateCellsBatchingPeriod={50}
      useScrollView={false}
      vertical={false}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={41}
    >
      <View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 1,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                    Object {
                      "borderColor": "rgb(253,95,108)",
                      "borderWidth": 2,
                      "shadowOffset": undefined,
                      "shadowOpacity": 0,
                      "shadowRadius": 0,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "white",
                    },
                    false,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "rgb(253,95,108)",
                      "fontFamily": "fontello",
                      "fontSize": 25,
                    }
                  }
                >
                  d
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "white",
                    },
                    false,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "rgb(253,95,108)",
                      "fontFamily": "fontello",
                      "fontSize": 25,
                    }
                  }
                >
                  a
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "white",
                    },
                    false,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "rgb(253,95,108)",
                      "fontFamily": "fontello",
                      "fontSize": 25,
                    }
                  }
                >
                  b
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "white",
                    },
                    false,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "rgb(253,95,108)",
                      "fontFamily": "fontello",
                      "fontSize": 25,
                    }
                  }
                >
                  g
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "white",
                    },
                    false,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "rgb(253,95,108)",
                      "fontFamily": "fontello",
                      "fontSize": 25,
                    }
                  }
                >
                  e
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "white",
                    },
                    false,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "rgb(253,95,108)",
                      "fontFamily": "fontello",
                      "fontSize": 25,
                    }
                  }
                >
                  c
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <TextInput
    inputAccessoryViewID="uniqueID"
    onChangeText={[Function]}
    placeholder="Name this place"
    style={
      Object {
        "backgroundColor": "white",
        "borderBottomColor": "rgb(212,212,212)",
        "borderBottomWidth": 1,
        "borderTopColor": "rgb(212,212,212)",
        "borderTopWidth": 1,
        "fontFamily": "Roboto-Regular",
        "fontSize": 32,
        "height": 100,
        "padding": 20,
        "paddingLeft": 42,
        "width": "100%",
      }
    }
    value={null}
  />
  <View
    style={
      Object {
        "flexDirection": "row",
        "paddingHorizontal": 60,
        "paddingVertical": 40,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "marginRight": 100,
          "opacity": 1,
        }
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../images/iconAddnote.png",
          }
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(253,95,108)",
              "fontFamily": "Roboto-Regular",
              "fontSize": 14,
            },
            Object {
              "left": 10,
              "marginTop": 16,
            },
          ]
        }
      >
        Note
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "marginRight": 100,
          "opacity": 1,
        }
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../images/attachPhotoPlus.png",
          }
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(253,95,108)",
              "fontFamily": "Roboto-Regular",
              "fontSize": 14,
            },
            Object {
              "left": 10,
              "marginTop": 16,
            },
          ]
        }
      >
        Photo
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgb(253,95,108)",
        "opacity": 1,
        "paddingVertical": 30,
        "width": "100%",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "white",
            "fontFamily": "Roboto-Regular",
            "fontSize": 15,
          },
          undefined,
        ]
      }
    >
      Pin Location
    </Text>
  </View>
</View>
`;

exports[`BotCompose renders with owned bot 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "marginTop": 172,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 10,
      }
    }
  >
    <RCTScrollView
      activeAnimationOptions={null}
      activeAnimationType="timing"
      activeSlideAlignment="center"
      activeSlideOffset={20}
      apparitionDelay={0}
      automaticallyAdjustContentInsets={false}
      autoplay={false}
      autoplayDelay={5000}
      autoplayInterval={3000}
      callbackOffsetMargin={5}
      containerCustomStyle={Object {}}
      contentContainerCustomStyle={Object {}}
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "paddingLeft": 348.5,
            "paddingRight": 348.5,
          },
        ]
      }
      data={
        Array [
          undefined,
          "d",
          "a",
          "b",
          "g",
          "e",
          "c",
        ]
      }
      decelerationRate="fast"
      directionalLockEnabled={true}
      disableVirtualization={false}
      enableMomentum={false}
      enableSnap={true}
      firstItem={0}
      getItem={[Function]}
      getItemCount={[Function]}
      hasParallaxImages={false}
      horizontal={true}
      inactiveSlideOpacity={1}
      inactiveSlideScale={0.9}
      inactiveSlideShift={0}
      initialNumToRender={20}
      invertStickyHeaders={false}
      inverted={false}
      itemWidth={53}
      keyExtractor={[Function]}
      layout="default"
      lockScrollTimeoutDuration={1000}
      lockScrollWhileSnapping={false}
      loop={false}
      loopClonesPerSide={3}
      maxToRenderPerBatch={41}
      numColumns={1}
      onBeforeSnapToItem={[Function]}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onResponderRelease={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      onTouchStart={[Function]}
      overScrollMode="never"
      pinchGestureEnabled={false}
      removeClippedSubviews={true}
      renderItem={[Function]}
      scrollEventThrottle={1}
      scrollsToTop={false}
      shouldOptimizeUpdates={true}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      slideStyle={Object {}}
      sliderWidth={750}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 0,
          "width": 750,
        }
      }
      swipeThreshold={20}
      updateCellsBatchingPeriod={50}
      useScrollView={false}
      vertical={false}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={41}
    >
      <View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 1,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                    Object {
                      "borderColor": "rgb(253,95,108)",
                      "borderWidth": 2,
                      "shadowOffset": undefined,
                      "shadowOpacity": 0,
                      "shadowRadius": 0,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "white",
                    },
                    false,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "rgb(253,95,108)",
                      "fontFamily": "fontello",
                      "fontSize": 25,
                    }
                  }
                >
                  d
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "white",
                    },
                    false,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "rgb(253,95,108)",
                      "fontFamily": "fontello",
                      "fontSize": 25,
                    }
                  }
                >
                  a
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "white",
                    },
                    false,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "rgb(253,95,108)",
                      "fontFamily": "fontello",
                      "fontSize": 25,
                    }
                  }
                >
                  b
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "white",
                    },
                    false,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "rgb(253,95,108)",
                      "fontFamily": "fontello",
                      "fontSize": 25,
                    }
                  }
                >
                  g
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "white",
                    },
                    false,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "rgb(253,95,108)",
                      "fontFamily": "fontello",
                      "fontSize": 25,
                    }
                  }
                >
                  e
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 53,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "height": 53,
                    "padding": 3,
                    "width": 53,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 4.4,
                      "flex": 1,
                      "justifyContent": "center",
                      "shadowColor": "rgb(253,95,108)",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.18,
                      "shadowRadius": 4,
                    },
                    Object {
                      "backgroundColor": "white",
                    },
                    false,
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "rgb(253,95,108)",
                      "fontFamily": "fontello",
                      "fontSize": 25,
                    }
                  }
                >
                  c
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <TextInput
    inputAccessoryViewID="uniqueID"
    onChangeText={[Function]}
    placeholder="Name this place"
    style={
      Object {
        "backgroundColor": "white",
        "borderBottomColor": "rgb(212,212,212)",
        "borderBottomWidth": 1,
        "borderTopColor": "rgb(212,212,212)",
        "borderTopWidth": 1,
        "fontFamily": "Roboto-Regular",
        "fontSize": 32,
        "height": 100,
        "padding": 20,
        "paddingLeft": 42,
        "width": "100%",
      }
    }
    value="title"
  />
  <View
    style={
      Object {
        "flexDirection": "row",
        "paddingHorizontal": 60,
        "paddingVertical": 40,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "marginRight": 100,
          "opacity": 1,
        }
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../images/iconAddnote.png",
          }
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(253,95,108)",
              "fontFamily": "Roboto-Regular",
              "fontSize": 14,
            },
            Object {
              "left": 10,
              "marginTop": 16,
            },
          ]
        }
      >
        Note
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "marginRight": 100,
          "opacity": 1,
        }
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../images/attachPhotoPlus.png",
          }
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(253,95,108)",
              "fontFamily": "Roboto-Regular",
              "fontSize": 14,
            },
            Object {
              "left": 10,
              "marginTop": 16,
            },
          ]
        }
      >
        Photo
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgb(253,95,108)",
        "opacity": 1,
        "paddingVertical": 30,
        "width": "100%",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "white",
            "fontFamily": "Roboto-Regular",
            "fontSize": 15,
          },
          undefined,
        ]
      }
    >
      Pin Location
    </Text>
  </View>
</View>
`;
