// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BotDetails renders with no data 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <R2RTouchThroughWrapper
    style={
      Object {
        "height": 1334,
        "width": 750,
      }
    }
  >
    <RCTScrollView
      ItemSeparatorComponent={[Function]}
      ListFooterComponent={[Function]}
      ListHeaderComponent={
        <DraggablePopupListHeader
          inner={
            <inject-BotDetailsHeader-with-notificationStore-analytics-locationStore
              analytics={
                Object {
                  "track": [MockFunction],
                }
              }
              bot={
                Object {
                  "address": "",
                  "addressData": Object {
                    "city": "",
                    "country": "",
                    "county": "",
                    "state": "",
                  },
                  "description": "",
                  "followersSize": 0,
                  "guest": false,
                  "guestsSize": 0,
                  "icon": "",
                  "id": "1234",
                  "image": null,
                  "invitation": null,
                  "isSubscribed": false,
                  "location": null,
                  "owner": null,
                  "radius": 100,
                  "server": null,
                  "title": null,
                  "totalItems": 0,
                  "visitor": false,
                  "visitors": Object {
                    "count": null,
                    "cursor": null,
                    "result": Array [],
                  },
                  "visitorsSize": 0,
                }
              }
              botId="1234"
              homeStore={Object {}}
              isNew={false}
              navigation={
                Object {
                  "state": Object {
                    "params": Object {
                      "isNew": false,
                    },
                  },
                }
              }
              notificationStore={Object {}}
              wocky={
                Object {
                  "activeBots": Object {},
                  "all": Object {},
                  "blocked": Object {},
                  "bots": Object {},
                  "chats": Object {
                    "list": Array [],
                    "unread": 0,
                  },
                  "connected": true,
                  "connecting": false,
                  "createChat": [Function],
                  "files": Object {},
                  "followed": Object {},
                  "followers": Object {},
                  "friends": Object {},
                  "geofenceBots": Object {},
                  "getBot": [Function],
                  "getProfile": [MockFunction],
                  "host": "host",
                  "id": "wocky",
                  "loadChats": [MockFunction],
                  "loadProfile": [MockFunction],
                  "login": [MockFunction],
                  "newFollowers": Object {},
                  "password": "password",
                  "profile": Object {
                    "email": "eric@hippware.com",
                    "firstName": "eric",
                    "handle": "southerneer",
                    "lastName": "kirkham",
                    "loaded": true,
                    "updateError": "",
                  },
                  "profiles": Object {},
                  "register": [MockFunction],
                  "sessionCount": 0,
                  "sortedRoster": Array [],
                  "username": "username",
                }
              }
            />
          }
        />
      }
      bounces={false}
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={8}
      keyExtractor={[Function]}
      keyboardDismissMode="on-drag"
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={Array []}
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View>
            <R2RTouchThroughView
              style={
                Object {
                  "height": 667,
                  "width": 750,
                }
              }
            />
            <View
              style={
                Object {
                  "paddingTop": 50,
                }
              }
            >
              <Image
                resizeMode="stretch"
                source={
                  Object {
                    "testUri": "../../../images/bottomPopup.png",
                  }
                }
                style={
                  Object {
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "white",
                    "flex": 1,
                    "marginTop": 20,
                    "paddingHorizontal": 40,
                  }
                }
              >
                <View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      numberOfLines={2}
                      style={
                        Array [
                          Object {
                            "color": "rgb(63,50,77)",
                            "fontFamily": "Roboto-Regular",
                            "fontSize": 21,
                          },
                          Object {
                            "fontFamily": "Roboto-Medium",
                            "textAlign": "center",
                            "width": "75%",
                          },
                        ]
                      }
                    />
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "marginTop": 20,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                          "justifyContent": "flex-start",
                        }
                      }
                    >
                      <BVLinearGradient
                        colors={
                          Array [
                            "rgb(242,68,191)",
                            "rgb(254,110,98)",
                            "rgb(254,92,108)",
                          ]
                        }
                        end={
                          Object {
                            "x": 1,
                            "y": 0.5,
                          }
                        }
                        start={
                          Object {
                            "x": 0,
                            "y": 0.5,
                          }
                        }
                        style={
                          Object {
                            "borderRadius": 5,
                            "marginRight": 10,
                            "paddingHorizontal": 20,
                            "paddingVertical": 6,
                          }
                        }
                      >
                        <Text
                          accessible={true}
                          allowFontScaling={true}
                          ellipsizeMode="tail"
                          style={
                            Array [
                              Object {
                                "color": "rgb(255,255,255)",
                                "fontFamily": "Roboto-Medium",
                                "fontSize": 13,
                              },
                              undefined,
                            ]
                          }
                        >
                          
                        </Text>
                      </BVLinearGradient>
                    </View>
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                          "justifyContent": "flex-start",
                        }
                      }
                    >
                      <BVLinearGradient
                        colors={
                          Array [
                            "rgb(242,68,191)",
                            "rgb(254,110,98)",
                            "rgb(254,92,108)",
                          ]
                        }
                        end={
                          Object {
                            "x": 1,
                            "y": 0.5,
                          }
                        }
                        start={
                          Object {
                            "x": 0,
                            "y": 0.5,
                          }
                        }
                        style={
                          Object {
                            "borderRadius": 5,
                            "marginRight": 10,
                            "paddingHorizontal": 20,
                            "paddingVertical": 6,
                          }
                        }
                      >
                        <Text
                          accessible={true}
                          allowFontScaling={true}
                          ellipsizeMode="tail"
                          style={
                            Array [
                              Object {
                                "color": "rgb(255,255,255)",
                                "fontFamily": "Roboto-Medium",
                                "fontSize": 13,
                              },
                              undefined,
                            ]
                          }
                        />
                      </BVLinearGradient>
                    </View>
                  </View>
                  <View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "height": 17,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "rgb(222,222,222)",
                              "height": 0.5,
                              "marginHorizontal": 40,
                              "marginVertical": 40,
                            },
                            Object {
                              "marginHorizontal": 5,
                              "marginTop": 0,
                              "width": "100%",
                            },
                          ]
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "rgb(255,255,255)",
                          "flexDirection": "row",
                          "marginBottom": 10,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "height": 40,
                            },
                            undefined,
                          ]
                        }
                      />
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "rgb(222,222,222)",
                            "height": 0.5,
                            "marginHorizontal": 40,
                            "marginVertical": 40,
                          },
                          Object {
                            "marginHorizontal": 5,
                          },
                        ]
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "height": 200,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "borderBottomWidth": 0.5,
            "borderColor": "rgb(212,212,212)",
            "elevation": 1,
            "flex": 1,
            "flexDirection": "row",
            "height": 140.8,
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingTop": 44,
          }
        }
      >
        <View
          style={
            Object {
              "width": 23,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Image
              source={
                Object {
                  "testUri": "../../../images/iconBackGrayNew.png",
                }
              }
              style={
                Object {
                  "height": 21,
                  "marginLeft": 10,
                  "tintColor": "rgb(117,117,117)",
                  "width": 13,
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginHorizontal": 16,
                "opacity": 1,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "rgb(63,50,77)",
                    "fontFamily": "Roboto-Regular",
                    "fontSize": 16,
                  },
                  Array [
                    Object {
                      "color": "rgb(63,50,77)",
                      "fontFamily": "Roboto-Medium",
                      "fontSize": 17,
                      "fontWeight": undefined,
                      "letterSpacing": 0.5,
                    },
                    Object {
                      "textAlign": "center",
                    },
                  ],
                ]
              }
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "rgb(63,50,77)",
                    "fontFamily": "Roboto-Light",
                    "fontSize": 12,
                  },
                  Object {
                    "textAlign": "center",
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "marginRight": 20,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Image
              source={
                Object {
                  "testUri": "../../../images/shareIcon.png",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </R2RTouchThroughWrapper>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgb(255,255,255)",
          "borderColor": "rgb(212,212,212)",
          "borderTopWidth": 0.5,
          "bottom": 0,
          "left": 0,
          "paddingBottom": 60.00000000000001,
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-start",
              "backgroundColor": "white",
              "flexDirection": "row",
              "padding": 15,
            },
          ]
        }
      >
        <View
          accessible={true}
          hitSlop={
            Object {
              "bottom": 15,
              "left": 15,
              "right": 15,
              "top": 15,
            }
          }
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "borderColor": "transparent",
              "borderWidth": 0,
              "opacity": 1,
            }
          }
        >
          <Image
            resizeMode="contain"
            source={
              Object {
                "testUri": "../../../images/attachPhoto.png",
              }
            }
            style={
              Object {
                "height": 21,
              }
            }
          />
        </View>
        <TextInput
          allowFontScaling={true}
          enablesReturnKeyAutomatically={true}
          maxLength={5000}
          multiline={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Add a comment"
          placeholderTextColor="rgb(155,155,155)"
          returnKeyType="default"
          style={
            Array [
              Object {
                "alignSelf": "center",
                "flex": 1,
                "fontFamily": "Roboto-Light",
                "fontSize": 17,
                "margin": 0,
                "paddingHorizontal": 11,
                "paddingTop": 0,
              },
              Object {
                "color": "rgb(63,50,77)",
              },
              Object {
                "height": "auto",
              },
            ]
          }
          value=""
        />
        <View
          accessible={true}
          hitSlop={
            Object {
              "bottom": 15,
              "left": 15,
              "right": 15,
              "top": 15,
            }
          }
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "rgb(212,212,212)",
                  "fontFamily": "Roboto-Regular",
                  "fontSize": 16,
                },
                undefined,
              ]
            }
          >
            Post
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "white",
          }
        }
      />
    </View>
  </View>
</View>
`;
