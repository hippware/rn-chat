// Jest Snapshot v1, https://goo.gl/fbAQLP

<<<<<<< HEAD
exports[`BotDetails renders with no data 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <R2RTouchThroughWrapper
    style={
      Object {
        "height": 1334,
        "width": 750,
      }
    }
  >
    <RCTScrollView
      ItemSeparatorComponent={[Function]}
      ListFooterComponent={[Function]}
      ListHeaderComponent={
        <DraggablePopupListHeader
          ItemSeparatorComponent={[Function]}
          ListFooterComponent={[Function]}
          bounces={false}
          contentContainerStyle={
            Object {
              "flexGrow": 1,
            }
          }
          data={Array []}
          headerInner={
            <inject-_class-with-notificationStore-analytics-locationStore
              analytics={
                Object {
                  "track": [MockFunction],
                }
              }
              bot={
                Object {
                  "address": "",
                  "addressData": Object {
                    "city": "",
                    "country": "",
                    "county": "",
                    "state": "",
                  },
                  "description": "",
                  "file": undefined,
                  "followersSize": 0,
                  "icon": "",
                  "id": "1234",
                  "image": null,
                  "invitation": null,
                  "isSubscribed": false,
                  "location": null,
                  "owner": null,
                  "radius": 100,
                  "server": null,
                  "title": null,
                  "totalItems": 0,
                  "visitor": false,
                  "visitors": Object {
                    "count": 0,
                    "cursor": null,
                    "result": Array [],
                  },
                  "visitorsSize": 0,
                }
              }
              botId="1234"
              homeStore={Object {}}
              isActive={true}
              isNew={false}
              navigation={
                Object {
                  "state": Object {
                    "params": Object {
                      "isNew": false,
                    },
                  },
                }
              }
              notificationStore={Object {}}
              wocky={
                Object {
                  "activeBots": Array [],
                  "all": Object {},
                  "blocked": Object {},
                  "bots": Object {},
                  "chats": Object {
                    "createChat": [Function],
                    "list": Array [],
                    "loadChats": [MockFunction],
                    "unread": 0,
                  },
                  "connected": true,
                  "connecting": false,
                  "files": Object {},
                  "followed": Object {},
                  "followers": Object {},
                  "friends": Object {},
                  "geofenceBots": Object {},
                  "getBot": [Function],
                  "getProfile": [MockFunction],
                  "host": "host",
                  "id": "wocky",
                  "loadProfile": [MockFunction],
                  "login": [MockFunction],
                  "newFollowers": Object {},
                  "password": "password",
                  "profile": Object {
                    "email": "eric@hippware.com",
                    "firstName": "eric",
                    "handle": "southerneer",
                    "lastName": "kirkham",
                    "loaded": true,
                    "locationSharers": Object {
                      "list": Array [],
                    },
                    "locationShares": Object {
                      "list": Array [],
                    },
                    "sortedFriends": Array [],
                    "updateError": "",
                  },
                  "profiles": Object {},
                  "register": [MockFunction],
                  "sessionCount": 0,
                  "username": "username",
                }
              }
            />
          }
          initialNumToRender={8}
          isActive={true}
          keyExtractor={[Function]}
          keyboardDismissMode="on-drag"
          renderItem={[Function]}
          scrollY={0}
        />
      }
      bounces={false}
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={8}
      keyExtractor={[Function]}
      keyboardDismissMode="on-drag"
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={60}
      scrollY={0}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={Array []}
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
        >
          <R2RTouchThroughView
            style={
              Object {
                "height": 667,
                "width": 750,
              }
            }
          />
          <View
            style={
              Object {
                "paddingTop": 50,
              }
            }
          >
            <Image
              resizeMode="stretch"
              source={
                Object {
                  "testUri": "../../../images/bottomPopup.png",
                }
              }
              style={
                Object {
                  "position": "absolute",
                  "width": "100%",
                }
              }
            />
            <View
              style={
                Object {
                  "backgroundColor": "white",
                  "flex": 1,
                  "marginTop": 20,
                  "paddingHorizontal": 40,
                }
              }
            >
              <View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                >
                  <Text
                    ellipsizeMode="tail"
                    numberOfLines={2}
                    style={
                      Array [
                        Object {
                          "color": "rgb(63,50,77)",
                          "fontFamily": "Roboto-Regular",
                          "fontSize": 21,
                        },
                        Object {
                          "fontFamily": "Roboto-Medium",
                          "textAlign": "center",
                          "width": "75%",
                        },
                      ]
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginTop": 20,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          "rgb(242,68,191)",
                          "rgb(254,110,98)",
                          "rgb(254,92,108)",
                        ]
                      }
                      end={
                        Object {
                          "x": 1,
                          "y": 0.5,
                        }
                      }
                      start={
                        Object {
                          "x": 0,
                          "y": 0.5,
                        }
                      }
                      style={
                        Object {
                          "borderRadius": 5,
                          "marginRight": 10,
                          "paddingHorizontal": 20,
                          "paddingVertical": 6,
                        }
                      }
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "rgb(255,255,255)",
                              "fontFamily": "Roboto-Medium",
                              "fontSize": 13,
                            },
                            undefined,
                          ]
                        }
                      >
                        
                      </Text>
                    </BVLinearGradient>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          "rgb(242,68,191)",
                          "rgb(254,110,98)",
                          "rgb(254,92,108)",
                        ]
                      }
                      end={
                        Object {
                          "x": 1,
                          "y": 0.5,
                        }
                      }
                      start={
                        Object {
                          "x": 0,
                          "y": 0.5,
                        }
                      }
                      style={
                        Object {
                          "borderRadius": 5,
                          "marginRight": 10,
                          "paddingHorizontal": 20,
                          "paddingVertical": 6,
                        }
                      }
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "rgb(255,255,255)",
                              "fontFamily": "Roboto-Medium",
                              "fontSize": 13,
                            },
                            undefined,
                          ]
                        }
                      />
                    </BVLinearGradient>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgb(222,222,222)",
                          "height": 0.5,
                          "marginHorizontal": 40,
                          "marginVertical": 40,
                        },
                        Object {
                          "width": "100%",
                        },
                      ]
                    }
                  />
                  <Image
                    source={
                      Object {
                        "testUri": "../../../images/shoesPink.png",
                      }
                    }
                    style={
                      Object {
                        "marginVertical": 30,
                      }
                    }
                  />
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "rgb(117,117,117)",
                          "fontFamily": "Roboto-Light",
                          "fontSize": 15,
                        },
                        Object {
                          "textAlign": "center",
                        },
                      ]
                    }
                  >
                    Know when friends arrive
and depart this location.
                  </Text>
                  <View
                    accessible={true}
                    clickable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "borderColor": "rgb(253,95,108)",
                        "borderRadius": 20,
                        "borderWidth": 1,
                        "height": 40,
                        "justifyContent": "center",
                        "marginTop": 30,
                        "opacity": 1,
                        "width": 170,
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "rgb(253,95,108)",
                            "fontFamily": "Roboto-Regular",
                            "fontSize": 16.8,
                          },
                          undefined,
                        ]
                      }
                    >
                      Follow Location
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "height": 200,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </R2RTouchThroughWrapper>
</View>
`;
=======
exports[`BotDetails renders with no data 1`] = `null`;
>>>>>>> origin/master
