// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signup renders 1`] = `
<RCTScrollView
  automaticallyAdjustContentInsets={false}
  contentInset={
    Object {
      "bottom": 0,
    }
  }
  enableAutomaticScroll={true}
  enableOnAndroid={false}
  enableResetScrollToCoords={true}
  extraHeight={75}
  extraScrollHeight={0}
  getScrollResponder={[Function]}
  handleOnScroll={[Function]}
  keyboardDismissMode="interactive"
  keyboardOpeningTime={250}
  keyboardSpace={0}
  onScroll={[Function]}
  resetKeyboardSpace={[Function]}
  scrollEventThrottle={1}
  scrollForExtraHeightOnAndroid={[Function]}
  scrollIntoView={[Function]}
  scrollToEnd={[Function]}
  scrollToFocusedInput={[Function]}
  scrollToPosition={[Function]}
  showsVerticalScrollIndicator={true}
  update={[Function]}
  viewIsInsideTabBar={false}
>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "height": 1334,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "marginTop": 110.00000000000001,
          }
        }
        testID="signUpTopRow"
      >
        <Image
          source={
            Object {
              "testUri": "../../../images/pink.png",
            }
          }
          style={
            Object {
              "height": 124.2,
              "width": 108,
            }
          }
        />
        <View
          style={
            Object {
              "paddingLeft": 40,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "rgb(253,95,108)",
                  "fontFamily": "Roboto-Light",
                  "fontSize": 30,
                },
                Object {
                  "height": 80,
                },
              ]
            }
          >
            Let's get
            

            started!
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "alignSelf": "center",
            "justifyContent": "center",
            "marginVertical": 176,
            "width": "80%",
          }
        }
      >
        <View>
          <View
            style={
              Object {
                "height": 10,
              }
            }
          />
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingBottom": 13,
                  "paddingHorizontal": 10,
                  "paddingTop": 9,
                },
                Object {
                  "justifyContent": "center",
                  "paddingTop": 2,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                }
              }
            >
              <Image
                source={
                  Object {
                    "testUri": "../../../images/iconUsernameNew.png",
                  }
                }
                style={
                  Array [
                    Object {
                      "marginLeft": 16,
                      "marginRight": 13,
                    },
                    undefined,
                  ]
                }
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <TextInput
                allowFontScaling={true}
                autoCapitalize="none"
                autoCorrect={false}
                clearButtonMode="while-editing"
                icon={
                  Object {
                    "testUri": "../../../images/iconUsernameNew.png",
                  }
                }
                label="Username"
                onChangeText={[Function]}
                onSubmitEditing={[Function]}
                placeholder="Username"
                placeholderTextColor="rgb(212,212,212)"
                returnKeyType="next"
                store={
                  ValidateItem {
                    "errorMessage": "",
                    "isValid": undefined,
                    "key": "handle",
                    "value": "southerneer",
                    Symbol(mobx did run lazy initializers): true,
                    Symbol(mobx administration): ObservableObjectAdministration$$1 {
                      "defaultEnhancer": [Function],
                      "keysAtom": Atom$$1 {
                        "diffValue": 0,
                        "isBeingObserved": false,
                        "isPendingUnobservation": false,
                        "lastAccessedBy": 0,
                        "lowestObserverState": 2,
                        "name": "ValidateItem@5.keys",
                        "observers": Set {},
                      },
                      "name": "ValidateItem@5",
                      "target": [Circular],
                      "values": Map {
                        "errorMessage" => "",
                        "value" => "southerneer",
                        "isValid" => undefined,
                      },
                    },
                  }
                }
                style={
                  Object {
                    "color": "rgb(63,50,77)",
                    "flex": 1,
                    "fontFamily": "Roboto-Regular",
                    "fontSize": 18,
                  }
                }
                testID="signUpUsername"
                underlineColorAndroid="transparent"
                value="southerneer"
              />
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "width": 30,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(63, 50, 77, .2)",
                  "height": 0.5,
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(155,155,155)",
              "fontFamily": "Roboto-Regular",
              "fontSize": 12.5,
            },
            Array [
              Object {
                "marginBottom": 70,
                "marginTop": 70,
                "textAlign": "center",
              },
              Object {
                "paddingHorizontal": 35,
              },
            ],
          ]
        }
      >
        By signing up you agree to our 
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          onPress={[Function]}
          style={
            Array [
              Object {
                "color": undefined,
                "fontFamily": "Roboto-Bold",
                "fontSize": 12.5,
              },
              undefined,
            ]
          }
        >
          Privacy Policy
        </Text>
        , 

        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          onPress={[Function]}
          style={
            Array [
              Object {
                "color": undefined,
                "fontFamily": "Roboto-Bold",
                "fontSize": 12.5,
              },
              undefined,
            ]
          }
        >
          Terms of Service
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgb(155,155,155)",
                "fontFamily": "Roboto-Regular",
                "fontSize": 12.5,
              },
              Object {
                "marginBottom": 70,
                "marginTop": 70,
                "textAlign": "center",
              },
            ]
          }
        >
          , and for us to contact you via email for updates and information.
        </Text>
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgb(254,92,108)",
            "borderRadius": 6,
            "height": 100,
            "justifyContent": "center",
            "opacity": 1,
            "width": "80%",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "Roboto-Regular",
                "fontSize": 17.5,
              },
              Object {
                "letterSpacing": 0.8,
                "textAlign": "center",
              },
            ]
          }
        >
          Done
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
