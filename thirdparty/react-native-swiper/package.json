{
  "_args": [
    [
      "react-native-swiper@github:leecade/react-native-swiper",
      "/Users/aksonov/Documents/rn-chat"
    ]
  ],
  "_from": "leecade/react-native-swiper",
  "_id": "react-native-swiper@1.4.3",
  "_inCache": true,
  "_installable": true,
  "_location": "/react-native-swiper",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/leecade/react-native-swiper/master/package.json",
      "gitUrl": "git://github.com/leecade/react-native-swiper.git",
      "httpsUrl": "git+https://github.com/leecade/react-native-swiper.git",
      "shortcut": "github:leecade/react-native-swiper",
      "ssh": "git@github.com:leecade/react-native-swiper.git",
      "sshUrl": "git+ssh://git@github.com/leecade/react-native-swiper.git",
      "type": "github"
    },
    "name": "react-native-swiper",
    "raw": "react-native-swiper@github:leecade/react-native-swiper",
    "rawSpec": "github:leecade/react-native-swiper",
    "scope": null,
    "spec": "github:leecade/react-native-swiper",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/leecade/react-native-swiper.git#b514b90a27a889d1612878f76c5da87e84b95559",
  "_shasum": "296a4f1a5e241862356221eb05cf2096c5c8dc43",
  "_shrinkwrap": null,
  "_spec": "react-native-swiper@github:leecade/react-native-swiper",
  "_where": "/Users/aksonov/Documents/rn-chat",
  "author": "",
  "bugs": {
    "url": "https://github.com/leecade/react-native-swiper/issues"
  },
  "dependencies": {
    "react-timer-mixin": "^0.13.3"
  },
  "description": "Swiper component for React Native.",
  "devDependencies": {
    "babel-cli": "^6.9.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-react": "^6.3.13"
  },
  "gitHead": "b514b90a27a889d1612878f76c5da87e84b95559",
  "homepage": "https://github.com/leecade/react-native-swiper#readme",
  "keywords": [
    "ios",
    "react-component",
    "react-native"
  ],
  "license": "ISC",
  "main": "dist/index.js",
  "name": "react-native-swiper",
  "optionalDependencies": {},
  "readme": "# react-native-swiper\n\n[![npm version](http://img.shields.io/npm/v/react-native-swiper.svg?style=flat-square)](https://npmjs.org/package/react-native-swiper \"View this project on npm\")\n[![npm version](http://img.shields.io/npm/dm/react-native-swiper.svg?style=flat-square)](https://npmjs.org/package/react-native-swiper \"View this project on npm\")\n[![Issue Stats](http://issuestats.com/github/leecade/react-native-swiper/badge/pr?style=flat-square)](https://github.com/leecade/react-native-swiper/pulls?q=is%3Apr+is%3Aclosed)\n[![Issue Stats](http://issuestats.com/github/leecade/react-native-swiper/badge/issue?style=flat-square)](https://github.com/leecade/react-native-swiper/issues?q=is%3Aissue+is%3Aclosed)\n\n![logo](http://i.imgur.com/P4cRUgD.png)\n\nThe best Swiper component for React Native.\n\n## Roadmap\n\n### V2\n\n- [ ] **Compatible with android**\n\n- [ ] Fixes currently bugs\n\n- [ ] More features\n\n- [ ] Improve performance\n\n- [ ] Landscape mode\n\n> Please track in [milestones:v2](https://github.com/leecade/react-native-swiper/milestones/v2)\n\n> Contribute code to [branch:Android](https://github.com/leecade/react-native-swiper/tree/android) and [branch:V2](https://github.com/leecade/react-native-swiper/tree/v2)\n\n> Provide creative in [issues](https://github.com/leecade/react-native-swiper/issues)\n\n-----\n\n### V1\n\n- [ ] **Support for Android**\n\n- [ ] More switch effects\n\n- [ ] Unit tests\n\n- [ ] Check typo\n\n- [x] Infinite loop\n\n- [x] Direction control\n\n- [x] Complete custom style\n\n- [x] Allow title display & custom\n\n- [x] Multiple instances\n\n- [x] Custom container size\n\n- [x] Control buttons\n\n- [x] Autoplay\n\n- [x] Custom pagination style\n\n- [x] State inject\n\n## Changelogs\n\n- **[1.4.3]**\n  + Fixed auto play issue when only a child view\n\n- [v1.4.0]\n  + Support for React Native latest(`^0.17.0`) & Upgrade examples base on Xcode `7.2` / React Native `0.17.0`\n\n  + Upgrade build tool to babel6\n\n  + Add missing deps `react-timer-mixin`\n\n  + [1f8643a](https://github.com/leecade/react-native-swiper/commit/1f8643a67e2768d165132a19629a991a86672036) Move Dimensions import to deconstructed React import for react-native (@thanks [@jedrekk](https://github.com/jedrekk)).\n\n  + [e28af9b](https://github.com/leecade/react-native-swiper/commit/e28af9b205f17447cb3149b45fc220beec037bce) Support index property in combination with loop property (@thanks [@almost](https://github.com/almost)).\n\n  + [6c832d](https://github.com/leecade/react-native-swiper/commit/6c832d6a23da3737a2e8a2667273dc6093bcc9ee) fix warnings about keys for dots (@thanks [@sunnylqm](https://github.com/sunnylqm)).\n\n  + [8de1afc](https://github.com/leecade/react-native-swiper/commit/8de1afcb75a003424231bb089802db53bbbf84e4) Changes to make the example work in xcode 7 (@thanks [@allomov](https://github.com/allomov)).\n\n- [v1.3.0]\n  + [8d6d75c](https://github.com/leecade/react-native-swiper/commit/8d6d75c00edf87b603c218aad0018932277814b5) inject `state` in ScrollResponders (@thanks [@smothers](https://github.com/smothers)).\n\n- [v1.2.2]\n  + [890c0ce](https://github.com/leecade/react-native-swiper/commit/890c0ce64e2192c2ca7830e6699f67b88171e74b) ensure `onMomentumScrollEnd` synchronous update `index`.\n\n- [v1.2.0]\n  + [838b24c](https://github.com/leecade/react-native-swiper/commit/838b24cbeaf49b9ca1dabb4eed8305e314503fb1) Re-design a loop model for avoid img flickering.\n  + [9cb91c5](https://github.com/leecade/react-native-swiper/commit/9cb91c58c84034b0b8b874dbfc2a44da982686a8) fixes [#7](https://github.com/leecade/react-native-swiper/issues/6) `onMomentumScrollEnd` lost `event` param. (thanks [@smothers](https://github.com/smothers))\n\n- [v1.1.1]\n  + [21f0b00](https://github.com/leecade/react-native-swiper/commit/21f0b00138b6936cd3dfac2eb107a14c99c7392b) fixes [#6](https://github.com/leecade/react-native-swiper/issues/6) a define-propType error. (thanks [@benjamingeorge](https://github.com/benjamingeorge))\n\n- [v1.1.0]\n  + [44ec630](https://github.com/leecade/react-native-swiper/commit/44ec630b62844dbeaccee73adaa0996e319ebffb) fixes [#4](https://github.com/leecade/react-native-swiper/issues/4) `onMoementumScrollEnd` gets overridden. (thanks [@subpublicanders](https://github.com/subpublicanders))\n  + [5de06a7](https://github.com/leecade/react-native-swiper/commit/5de06a7aa86318ad38720728022b80e5cf98a2ab) New prop: `renderPagination`. (thanks [@aksonov](https://github.com/aksonov))\n\n- [v1.0.4]\n  + [21cb373](https://github.com/leecade/react-native-swiper/commit/21cb3732578588f9d47ee7ddda541577ad691970) fixes [#2](https://github.com/leecade/react-native-swiper/issues/2) Solve the problem of installation. (thanks [@jamwaffles](https://github.com/jamwaffles))\n\n- [v1.0.3]\n  + [0f796f3](https://github.com/leecade/react-native-swiper/commit/0f796f3557b5aeb1772573cd7ecae2e835bccc0b) fixes [#1](https://github.com/leecade/react-native-swiper/issues/1) Two 'horizontal' in propTypes. (thanks [@MacyzZ](https://github.com/MacyzZ))\n\n## Show Cases\n\n> Try these cases by yourself very easy, Just open `examples/ios/swiper.xcodeproj` in Xcode, then press `Cmd + R`; you may edit `examples/index.ios.js` for switch cases.\n\n### [examples/basic.js](https://github.com/leecade/react-native-swiper/blob/master/examples/examples/basic.js)\n\n![](http://i.imgur.com/zrsazAG.gif =300x)\n\n### [examples/swiper.js](https://github.com/leecade/react-native-swiper/blob/master/examples/examples/swiper.js)\n\n![](http://i.imgur.com/hP3f3oO.gif =300x)\n\n### [examples/swiper_number.js](https://github.com/leecade/react-native-swiper/blob/master/examples/examples/swiper_number.js)\n\n![](http://i.imgur.com/0rqESVb.gif =300x)\n\n### [examples/phone.js](https://github.com/leecade/react-native-swiper/blob/master/examples/examples/phone.js)\n\n![](http://i.imgur.com/c1BhjZm.gif =300x)\n\n## Getting Started\n\n- [Installation](#installation)\n- [Basic Usage](#basic-usage)\n- [Properties](#properties)\n  + [Basic](#basic)\n  + [Custom basic style & content](#custom-basic-style--content)\n  + [Pagination](#pagination)\n  + [Autoplay](#autoplay)\n  + [Control buttons](#control-buttons)\n  + [Props of Children](#props-of-children)\n  + [Basic props of `<ScrollView />`](#basic-props-of-scrollview-)\n  + [Supported ScrollResponder](#supported-scrollresponder)\n- [Examples](#examples)\n- [Development](#development)\n\n### Installation\n\n```bash\n$ npm i react-native-swiper --save\n```\n\n### Basic Usage\n\n- Install `react-native` first\n\n```bash\n$ npm i react-native -g\n```\n\n- Initialization of a react-native project\n\n```bash\n$ react-native init myproject\n```\n\n- Then, edit `myproject/index.ios.js`, like this:\n\n```jsx\nvar Swiper = require('react-native-swiper')\n// es6\n// import Swiper from 'react-native-swiper'\n\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n} = React;\n\nvar styles = StyleSheet.create({\n  wrapper: {\n  },\n  slide1: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#9DD6EB',\n  },\n  slide2: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#97CAE5',\n  },\n  slide3: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#92BBD9',\n  },\n  text: {\n    color: '#fff',\n    fontSize: 30,\n    fontWeight: 'bold',\n  }\n})\n\nvar swiper = React.createClass({\n  render: function() {\n    return (\n      <Swiper style={styles.wrapper} showsButtons={true}>\n        <View style={styles.slide1}>\n          <Text style={styles.text}>Hello Swiper</Text>\n        </View>\n        <View style={styles.slide2}>\n          <Text style={styles.text}>Beautiful</Text>\n        </View>\n        <View style={styles.slide3}>\n          <Text style={styles.text}>And simple</Text>\n        </View>\n      </Swiper>\n    )\n  }\n})\n\nAppRegistry.registerComponent('swiper', () => swiper)\n```\n\n### Properties\n\n#### Basic\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| horizontal | true | `bool` | If `true`, the scroll view's children are arranged horizontally in a row instead of vertically in a column. |\n| loop | true | `bool` | Set to `false` to disable continuous loop mode. |\n| index | 0 | `number` | Index number of initial slide. |\n| showsButtons | false | `bool` | Set to `true` make control buttons visible. |\n| autoplay | false | `bool` | Set to `true` enable auto play mode. |\n\n#### Custom basic style & content\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| width | - | `number` | If no specify default enable fullscreen mode by `flex: 1`. |\n| height | - | `number` | If no specify default fullscreen mode by `flex: 1`. |\n| style | {...} | `style` | See default style in source. |\n\n#### Pagination\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| showsPagination | true | `bool` | Set to `true` make pagination visible. |\n| paginationStyle | {...} | `style` | Custom styles will merge with the default styles. |\n| renderPagination | - | `function` | Complete control how to render pagination with three params (`index`, `total`, `context`) ref to `this.state.index` / `this.state.total` / `this`, For example: show numbers instead of dots. |\n| dot | `<View style={{backgroundColor:'rgba(0,0,0,.2)', width: 8, height: 8,borderRadius: 4, marginLeft: 3, marginRight: 3, marginTop: 3, marginBottom: 3,}} />` | `element` | Allow custom the dot element. |\n| activeDot | `<View style={{backgroundColor: '#007aff', width: 8, height: 8, borderRadius: 4, marginLeft: 3, marginRight: 3, marginTop: 3, marginBottom: 3,}} />` | `element` | Allow custom the active-dot element. |\n\n#### Autoplay\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| autoplay | true | `bool` | Set to `true` enable auto play mode. |\n| autoplayTimeout | 2.5 | `number` | Delay between auto play transitions (in second). |\n| autoplayDirection | true | `bool` | Cycle direction control. |\n\n#### Control buttons\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| showsButtons | true | `bool` | Set to `true` make control buttons visible. |\n| buttonWrapperStyle | `{backgroundColor: 'transparent', flexDirection: 'row', position: 'absolute', top: 0, left: 0, flex: 1, paddingHorizontal: 10, paddingVertical: 10, justifyContent: 'space-between', alignItems: 'center'}` | `style` | Custom styles. |\n| nextButton | `<Text style={styles.buttonText}>›</Text>` | `element` | Allow custom the next button. |\n| prevButton | `<Text style={styles.buttonText}>‹</Text>` | `element` | Allow custom the prev button. |\n\n#### Props of Children\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| style | {...} | `style` | Custom styles will merge with the default styles. |\n| title | {<Text numberOfLines={1}>...</Text>} | `element` | If this parameter is not specified, will not render the title. |\n\n#### Basic props of `<ScrollView />`\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| horizontal | true | `bool` | If `true`, the scroll view's children are arranged horizontally in a row instead of vertically in a column. |\n| pagingEnabled | true | `bool` | If true, the scroll view stops on multiples of the scroll view's size when scrolling. This can be used for horizontal pagination.  |\n| showsHorizontalScrollIndicator | false | `bool` | Set to `true` if you want to show horizontal scroll bar. |\n| showsVerticalScrollIndicator | false | `bool` |  Set to `true` if you want to show vertical scroll bar. |\n| bounces | false | `bool` | If `true`, the scroll view bounces when it reaches the end of the content if the content is larger then the scroll view along the axis of the scroll direction. If `false`, it disables all bouncing even if the alwaysBounce* props are true.  |\n| scrollsToTop | false | `bool` | If true, the scroll view scrolls to top when the status bar is tapped.  |\n| removeClippedSubviews | true | `bool` | If true, offscreen child views (whose overflow value is hidden) are removed from their native backing superview when offscreen. This canimprove scrolling performance on long lists.  |\n| automaticallyAdjustContentInsets | false | `bool` | Set to `true` if you need adjust content insets automation. |\n\n> @see: http://facebook.github.io/react-native/docs/scrollview.html\n\n#### Supported ScrollResponder\n\n| Prop  | Params  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| onScrollBeginDrag | `e` / `state` / `context` | `function` | When animation begins after letting up |\n| onMomentumScrollEnd | `e` / `state` / `context` | `function` | Makes no sense why this occurs first during bounce |\n| onTouchStartCapture | `e` / `state` / `context` | `function` | Immediately after `onMomentumScrollEnd` |\n| onTouchStart | `e` / `state` / `context` | `function` | Same, but bubble phase |\n| onTouchEnd | `e` / `state` / `context` | `function` | You could hold the touch start for a long time |\n| onResponderRelease | `e` / `state` / `context` | `function` | When lifting up - you could pause forever before * lifting |\n\n> Note: each ScrollResponder be injected with two params: `state` and `context`, you can get `state` and `context`(ref to swiper's `this`) from params, for example:\n\n```jsx\nvar swiper = React.createClass({\n  _onMomentumScrollEnd: function (e, state, context) {\n    console.log(state, context.state)\n  },\n  render: function() {\n    return (\n      <Swiper style={styles.wrapper}\n      onMomentumScrollEnd ={this._onMomentumScrollEnd}\n     ...\n      </Swiper>\n    )\n  }\n})\n```\n\n> More ScrollResponder info, see: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollResponder.js\n\n### Examples\n\n@TODO, see code in [examples](https://github.com/leecade/react-native-swiper/tree/master/examples/examples) first.\n\n### Development\n\n```bash\n$ npm start\n```\n\n## Contribution\n\n- [@leecade](mailto:leecade@163.com) The main author.\n\n## Questions\n\nFeel free to [contact me](mailto:leecade@163.com) or [create an issue](https://github.com/leecade/react-native-swiper/issues/new)\n\n> Inspired by [nolimits4web/Swiper](https://github.com/nolimits4web/swiper/) & Design material from [Dribbble](https://dribbble.com/) & made with ♥.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/leecade/react-native-swiper.git"
  },
  "scripts": {
    "start": "babel src --out-dir dist --presets es2015,react",
    "watch": "babel src --out-dir dist --watch --presets es2015,react"
  },
  "version": "1.4.3"
}
